<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>&lt;html&gt;&#xd;
&#xd;
&lt;h1&gt; FullDeploy&lt;/h1&gt;&#xd;
  &#xd;
FullBygge. Alla cobolmoduler kompileras. Tarfilerna heter exvis: D20121206_SVN000301_B0105_&lt;font color=&quot;red&quot;&gt;NAMN_PÅ_BRANCH&lt;/font&gt;  &#xd;
  och läggs under &lt;b&gt;/program/Test-Leveranser&lt;/b&gt;&#xd;
&lt;/html&gt;&#xd;
&#xd;
&#xd;
</description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>-1</daysToKeep>
    <numToKeep>75</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.3">
      <useBuildBlocker>true</useBuildBlocker>
      <blockingJobs>cdbisboCDBI</blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.TextParameterDefinition>
          <name>Modifieringar</name>
          <description>Beskriv vad som har modifierats</description>
          <defaultValue>inga</defaultValue>
        </hudson.model.TextParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.SubversionSCM" plugin="subversion@1.43">
    <locations>
      <hudson.scm.SubversionSCM_-ModuleLocation>
        <remote>https://subversion03/svn/uniregrepos/branches/cdbisbo/src</remote>
        <local>src</local>
      </hudson.scm.SubversionSCM_-ModuleLocation>
    </locations>
    <excludedRegions></excludedRegions>
    <includedRegions></includedRegions>
    <excludedUsers></excludedUsers>
    <excludedRevprop></excludedRevprop>
    <excludedCommitMessages></excludedCommitMessages>
    <workspaceUpdater class="hudson.scm.subversion.UpdateUpdater"/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers class="vector"/>
  <concurrentBuild>false</concurrentBuild>
  <customWorkspace>/srv/jenkins/cdbisboFullDeploy</customWorkspace>
  <builders>
    <EnvInjectBuilder plugin="envinject@1.73">
      <info>
        <propertiesContent># Stuff needed to create deploy/release mail
SUBJECT2=$JOB_NAME
MSG=${BUILD_USER_LAST_NAME} your build failed</propertiesContent>
      </info>
    </EnvInjectBuilder>
    <hudson.tasks.Shell>
      <command>$WORKSPACE/src/scripts/svn_co_fwk_files.sh

# Generate a buildfile based on what pco-files that we have in the repository
# arguments:
# - in : workspace
# - out: generated buildfile
# - out: generated dictionary file for single compile
$WORKSPACE/src/scripts/create_ant_buildfile.py $WORKSPACE  $WORKSPACE/src/build.xml $WORKSPACE/test.pkl 

export ORACLE_CONN=$BYGGDB04

cd $WORKSPACE/src
./ant_compile.sh nodebug $WORKSPACE $WORKSPACE/src/build.xml  $ORACLE_CONN  $WORKSPACE/test.pkl 

$WORKSPACE/src/scripts/check_so_against_pco.sh $WORKSPACE </command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command># Discard seconds and &apos;-&apos; from BUILD_ID  Note that this command creates propfile

echo DATE=$(echo $BUILD_ID | cut -c1-10 | sed &apos;s/\-//g&apos; ) &gt; $WORKSPACE/propsfile

# Zero fill with  4 chars
echo BUILD=$(printf &apos;%04d&apos;  $BUILD_NUMBER) &gt;&gt; $WORKSPACE/propsfile

# Pick to SVN number from the checkout
# Zero fill with 6 chars
echo SVN=$(printf &apos;%06d&apos;  $SVN_REVISION) &gt;&gt; $WORKSPACE/propsfile

echo PACKAGE=$(echo $SVN_URL | awk &apos;BEGIN{FS=&quot;/&quot;}  {print $7 }&apos; | tr &apos;[:lower:]&apos; &apos;[:upper:]&apos;)  &gt;&gt; $WORKSPACE/propsfile</command>
    </hudson.tasks.Shell>
    <EnvInjectBuilder plugin="envinject@1.73">
      <info>
        <propertiesFilePath>$WORKSPACE/propsfile</propertiesFilePath>
        <propertiesContent># Concatenate the stuff we created in the script earlier
RELEASE_TAG=D${DATE}_SVN${SVN}_B${BUILD}_${PACKAGE}</propertiesContent>
      </info>
    </EnvInjectBuilder>
    <hudson.tasks.Shell>
      <command># Build up stuff for mailing
echo SUBJECT1=&quot;${RELEASE_TAG} deploy&quot;  &gt;&gt; $WORKSPACE/propsfile

export GENERAL=&quot;&lt;html&gt;&lt;h4&gt;Allmänt:&lt;/h4&gt;&lt;p&gt;Deploy av ${RELEASE_TAG} har gjorts.&lt;/p&gt;&quot;
echo &quot;${GENERAL} &lt;h4&gt;Ändringar:&lt;/h4&gt; &lt;p&gt;${Modifieringar}&lt;/p&gt;&lt;h4&gt;Deployen gjord av:&lt;/h4&gt; ${BUILD_USER}&lt;/html&gt;&quot; &gt; ${RELEASE_TAG}_release_notes.html

echo CONTENT=$(cat ${RELEASE_TAG}_release_notes.html) &gt;&gt; $WORKSPACE/propsfile</command>
    </hudson.tasks.Shell>
    <EnvInjectBuilder plugin="envinject@1.73">
      <info>
        <propertiesFilePath>$WORKSPACE/propsfile</propertiesFilePath>
        <propertiesContent># Stuff needed to create deploy/release mail
SUBJECT2=$SUBJECT1
MSG=$CONTENT</propertiesContent>
      </info>
    </EnvInjectBuilder>
    <hudson.tasks.Shell>
      <command># Make tar files for deployment
$WORKSPACE/src/scripts/d4prod_deploy.sh nodebug $RELEASE_TAG $WORKSPACE /program/Test-Leveranser</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.plugins.logparser.LogParserPublisher plugin="log-parser@1.0.8">
      <unstableOnWarning>true</unstableOnWarning>
      <failBuildOnError>true</failBuildOnError>
      <parsingRulesPath>/var/lib/jenkins/new_ant_errors.txt</parsingRulesPath>
    </hudson.plugins.logparser.LogParserPublisher>
    <org.jvnet.hudson.plugins.groovypostbuild.GroovyPostbuildRecorder plugin="groovy-postbuild@1.8">
      <groovyScript>if(manager.build.result.isBetterOrEqualTo(hudson.model.Result.UNSTABLE)) {
    manager.addShortText(&quot;${manager.build.buildVariables.get(&apos;BUILD_USER&apos;)}&quot;)
}</groovyScript>
      <behavior>0</behavior>
    </org.jvnet.hudson.plugins.groovypostbuild.GroovyPostbuildRecorder>
    <hudson.plugins.emailext.ExtendedEmailPublisher plugin="email-ext@2.24.1">
      <recipientList>stefan.bodingh@bolagsverket.se</recipientList>
      <configuredTriggers>
        <hudson.plugins.emailext.plugins.trigger.FailureTrigger>
          <email>
            <recipientList></recipientList>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>$PROJECT_DEFAULT_CONTENT</body>
            <sendToDevelopers>true</sendToDevelopers>
            <sendToRequester>false</sendToRequester>
            <includeCulprits>false</includeCulprits>
            <sendToRecipientList>true</sendToRecipientList>
          </email>
        </hudson.plugins.emailext.plugins.trigger.FailureTrigger>
        <hudson.plugins.emailext.plugins.trigger.SuccessTrigger>
          <email>
            <recipientList></recipientList>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>$PROJECT_DEFAULT_CONTENT</body>
            <sendToDevelopers>true</sendToDevelopers>
            <sendToRequester>false</sendToRequester>
            <includeCulprits>false</includeCulprits>
            <sendToRecipientList>true</sendToRecipientList>
          </email>
        </hudson.plugins.emailext.plugins.trigger.SuccessTrigger>
      </configuredTriggers>
      <contentType>text/html</contentType>
      <defaultSubject>${ENV,var=&quot;SUBJECT2&quot;}</defaultSubject>
      <defaultContent>${ENV,var=&quot;MSG&quot;}</defaultContent>
      <attachmentsPattern>*.txt</attachmentsPattern>
      <presendScript></presendScript>
    </hudson.plugins.emailext.ExtendedEmailPublisher>
    <hudson.plugins.ws__cleanup.WsCleanup plugin="ws-cleanup@0.10">
      <deleteDirs>false</deleteDirs>
      <skipWhenFailed>true</skipWhenFailed>
    </hudson.plugins.ws__cleanup.WsCleanup>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.10">
      <deleteDirs>false</deleteDirs>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
    <org.jenkinsci.plugins.builduser.BuildUser plugin="build-user-vars-plugin@1.1"/>
  </buildWrappers>
</project>